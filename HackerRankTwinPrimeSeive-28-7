import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {
     
     
    public static int solve(int n, int m) {
    // Write your code here
        boolean a[]=new boolean[m+1];
        for(int i=0;i<=m;i++)
         a[i]=true;
         a[0]=false;
         a[1]=false;
           
         for(int i=2;i*i<=m;i++)
         {
             if(a[i]==true)
             {  
                 for(int j=i*i;j<=m;j+=i)
                 a[j]=false;
             }
         }
        int count=0,k=0;
         int p[]=new int[m+1];
         for(int i=2;i<=m;i++)
         {
             if(a[i]==true)
             {
             p[k]=i;
             k++;
             }
         }
        for(int i=0;i<m;i++)
        {
            if(p[i]<n) continue;
            if(p[i+1]-p[i]==2) count++;
        }
        return count;
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] firstMultipleInput = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

        int n = Integer.parseInt(firstMultipleInput[0]);

        int m = Integer.parseInt(firstMultipleInput[1]);

        int result = Result.solve(n, m);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
------------------------------------------------------------------------------------------------------------------------
OUTPUT:
Input (stdin)

Download
3 13
Your Output (stdout)
3
Expected Output

Download
3
